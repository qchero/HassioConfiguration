# Input numbers
input_number:
  fresh_air_minutes_1:
    name: Duration Minute 1
    max: 120
    min: 0
    step: 5
  fresh_air_minutes_2:
    name: Duration Minute 2
    max: 120
    min: 0
    step: 5
  fresh_air_minutes_3:
    name: Duration Minute 3
    max: 120
    min: 0
    step: 5
  fresh_air_minutes_4:
    name: Duration Minute 4
    max: 120
    min: 0
    step: 5
  fresh_air_minutes_5:
    name: Duration Minute 5
    max: 120
    min: 0
    step: 5
  fresh_air_minutes_6:
    name: Duration Minute 6
    max: 120
    min: 0
    step: 5

# Input datetime
input_datetime:
  fresh_air_time_1:
    name: Start Time 1
    has_time: true
  fresh_air_time_2:
    name: Start Time 2
    has_time: true
  fresh_air_time_3:
    name: Start Time 3
    has_time: true
  fresh_air_time_4:
    name: Start Time 4
    has_time: true
  fresh_air_time_5:
    name: Start Time 5
    has_time: true
  fresh_air_time_6:
    name: Start Time 6
    has_time: true

# Input numbers for overrides
input_boolean:
  fresh_air_always_on:
    name: Always On
    icon: mdi:fan
  fresh_air_always_off:
    name: Always Off
    icon: mdi:fan-off

# Template sensor
sensor:
  - platform: template
    sensors:
      avg_outdoor_humidity:
        unit_of_measurement: "%"
        device_class: "humidity"
        value_template: >
          {% set driveway_humidity = states('sensor.humidity_158d000272ff7f') | float %}
          {% set patio_humidity = states('sensor.humidity_158d00023204b3') | float %}
          {{ ((driveway_humidity + patio_humidity) / 2) | round(1) }}

binary_sensor:
  - platform: template
    sensors:
      fan_time_in_schedule:
        value_template: >
          {% set current_time = states('sensor.time') %}
          {% set start_time_1 = states.input_datetime.fresh_air_time_1.attributes.timestamp | int | timestamp_custom('%H:%M', False) %}
          {% set input_minute_1 = states.input_number.fresh_air_minutes_1.state | int %}
          {% set end_time_1 = (states.input_datetime.fresh_air_time_1.attributes.timestamp + input_minute_1 * 60) | int | timestamp_custom('%H:%M', False) %}
          {% set start_time_2 = states.input_datetime.fresh_air_time_2.attributes.timestamp | int | timestamp_custom('%H:%M', False) %}
          {% set input_minute_2 = states.input_number.fresh_air_minutes_2.state | int %}
          {% set end_time_2 = (states.input_datetime.fresh_air_time_2.attributes.timestamp + input_minute_2 * 60) | int | timestamp_custom('%H:%M', False) %}
          {% set start_time_3 = states.input_datetime.fresh_air_time_3.attributes.timestamp | int | timestamp_custom('%H:%M', False) %}
          {% set input_minute_3 = states.input_number.fresh_air_minutes_3.state | int %}
          {% set end_time_3 = (states.input_datetime.fresh_air_time_3.attributes.timestamp + input_minute_3 * 60) | int | timestamp_custom('%H:%M', False) %}
          {% set start_time_4 = states.input_datetime.fresh_air_time_4.attributes.timestamp | int | timestamp_custom('%H:%M', False) %}
          {% set input_minute_4 = states.input_number.fresh_air_minutes_4.state | int %}
          {% set end_time_4 = (states.input_datetime.fresh_air_time_4.attributes.timestamp + input_minute_4 * 60) | int | timestamp_custom('%H:%M', False) %}
          {% set start_time_5 = states.input_datetime.fresh_air_time_5.attributes.timestamp | int | timestamp_custom('%H:%M', False) %}
          {% set input_minute_5 = states.input_number.fresh_air_minutes_5.state | int %}
          {% set end_time_5 = (states.input_datetime.fresh_air_time_5.attributes.timestamp + input_minute_5 * 60) | int | timestamp_custom('%H:%M', False) %}
          {% set start_time_6 = states.input_datetime.fresh_air_time_6.attributes.timestamp | int | timestamp_custom('%H:%M', False) %}
          {% set input_minute_6 = states.input_number.fresh_air_minutes_6.state | int %}
          {% set end_time_6 = (states.input_datetime.fresh_air_time_6.attributes.timestamp + input_minute_6 * 60) | int | timestamp_custom('%H:%M', False) %}
          {{(
            input_minute_1 > 0 and
            current_time >= start_time_1 and
            current_time <= end_time_1
          ) or
          (
            input_minute_2 > 0 and
            current_time >= start_time_2 and
            current_time <= end_time_2
          ) or
          (
            input_minute_3 > 0 and
            current_time >= start_time_3 and
            current_time <= end_time_3
          ) or
          (
            input_minute_4 > 0 and
            current_time >= start_time_4 and
            current_time <= end_time_4
          ) or
          (
            input_minute_5 > 0 and
            current_time >= start_time_5 and
            current_time <= end_time_5
          ) or 
          (
            input_minute_6 > 0 and
            current_time >= start_time_6 and
            current_time <= end_time_6
          )}}


# Automation
automation:
  - alias: Always on is set - Turn off always off
    initial_state: true
    trigger:
      platform: state
      entity_id: input_boolean.fresh_air_always_on
      to: "on"
    action:
      service: input_boolean.turn_off
      entity_id: input_boolean.fresh_air_always_off

  - alias: "Always off is set - Turn off always on"
    initial_state: true
    trigger:
      platform: state
      entity_id: input_boolean.fresh_air_always_off
      to: "on"
    action:
      service: input_boolean.turn_off
      entity_id: input_boolean.fresh_air_always_on

  - alias: "Fan override is set for a long time - Turn off override"
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.fresh_air_always_on
        to: "on"
        for: "02:00:00"
      - platform: state
        entity_id: input_boolean.fresh_air_always_off
        to: "on"
        for: "02:00:00"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.fresh_air_always_on
      - service: input_boolean.turn_off
        entity_id: input_boolean.fresh_air_always_off

  - alias: Every Minute or Override changes - Schedule fresh air fan
    initial_state: true
    trigger:
      - platform: time_pattern
        seconds: 0
      - platform: state
        entity_id: input_boolean.fresh_air_always_on
      - platform: state
        entity_id: input_boolean.fresh_air_always_off
    action:
      # 4 time & duration settings for fresh air fan
      service_template: >
        {% set avg_outdoor_humidity = states('sensor.avg_outdoor_humidity') | float %}
        {% if
          (
            states.input_boolean.fresh_air_always_off.state != 'on' and
            (
              states.input_boolean.fresh_air_always_on.state == 'on' or
              (
                states.binary_sensor.fan_time_in_schedule.state == 'on'
              )
            )
          )
        %}
        switch.turn_on
        {% else %}
        switch.turn_off
        {% endif %}
      entity_id: switch.sonoff_10004f6d35
